`python
import feedparser
import requests
import os
import json
from datetime import datetime, timedelta
from dateutil import parser as date_parser

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RSS_FEEDS = [
    {
        'url': 'https://openai.com/blog/rss.xml',
        'name': 'ü§ñ OpenAI'
    },
    {
        'url': 'https://blog.google/technology/ai/rss/',
        'name': 'üîç Google AI'
    },
    {
        'url': 'https://deepmind.com/blog/feed/basic/',
        'name': 'üß† DeepMind'
    }
]

TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')

def send_telegram_message(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    
    data = {
        'chat_id': TELEGRAM_CHAT_ID,
        'text': message,
        'parse_mode': 'HTML',
        'disable_web_page_preview': False
    }
    
    try:
        response = requests.post(url, data=data)
        if response.status_code == 200:
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
      def load_sent_articles():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
    try:
        with open('sent_articles.json', 'r') as f:
            return set(json.load(f))
    except FileNotFoundError:
        return set()

def save_sent_articles(articles):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
    with open('sent_articles.json', 'w') as f:
        json.dump(list(articles), f)

def fetch_and_send_news():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    sent_articles = load_sent_articles()
    new_articles = []
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—å–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 —á–∞—Å–æ–≤
    cutoff_time = datetime.now() - timedelta(hours=6)
    
    for feed_config in RSS_FEEDS:
        try:
            print(f"üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º {feed_config['name']}...")
            feed = feedparser.parse(feed_config['url'])
            
            for entry in feed.entries[:5]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç–∞—Ç–µ–π
                article_id = entry.link
                
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ
                if article_id in sent_articles:
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                try:
                    if hasattr(entry, 'published'):
                        pub_date = date_parser.parse(entry.published).replace(tzinfo=None)
                        if pub_date < cutoff_time:
                            continue
                except:
                    pass  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–∞—Ä—Å–∏—Ç—å –¥–∞—Ç—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                title = entry.title
                link = entry.link
                summary = entry.summary if hasattr(entry, 'summary') else ""
                
                # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
                if len(summary) > 200:
                    summary = summary[:200] + "..."
                
                message = f"""
{feed_config['name']} <b>{title}</b>

{summary}

üîó <a href="{link}">–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é</a>
                """.strip()
                
                new_articles.append({
                    'id': article_id,
                    'message': message
                })
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {feed_config['name']}: {e}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏
    if new_articles:
        print(f"üì® –ù–∞–π–¥–µ–Ω–æ {len(new_articles)} –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π")
        
        for article in new_articles:
            send_telegram_message(article['message'])
            sent_articles.add(article['id'])
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        save_sent_articles(sent_articles)
        
    else:
        print("üì≠ –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –Ω–µ—Ç")

if name == "main":
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        print("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        exit(1)
    
    fetch_and_send_news()
